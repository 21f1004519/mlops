
name: CI Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      -  name: Setup Node.js
         uses: actions/setup-node@v3
         with:
           node-version: '22'

      - name: Install CML
        run: npm install -g @dvcorg/cml

      - name: Authenticate to Google Cloud
        env:
          GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        run: |
          echo "$GCP_SERVICE_ACCOUNT_KEY" > gcp-key.json
          gcloud auth activate-service-account --key-file=gcp-key.json
          gcloud config set project heroic-throne-473405-m8
          export GOOGLE_APPLICATION_CREDENTIALS="gcp-key.json"
          
      - name: Pull data & model from DVC
        env:
          GOOGLE_APPLICATION_CREDENTIALS: gcp-key.json
        run: |
          dvc pull
          
      - name: Run tests
        run: pytest --maxfail=1 --disable-warnings -q

      - name: Post results as comment
        env:
          REPO_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          echo "Running tests..."
          pytest --maxfail=1 --disable-warnings -q --tb=short --durations=5 --cache-clear > result.txt 2>&1
          cat result.txt
      
          PASSED=$(grep -oE '[0-9]+ passed' result.txt | grep -oE '[0-9]+' || echo 0)
          FAILED=$(grep -oE '[0-9]+ failed' result.txt | grep -oE '[0-9]+' || echo 0)
          SKIPPED=$(grep -oE '[0-9]+ skipped' result.txt | grep -oE '[0-9]+' || echo 0)
          WARNINGS=$(grep -oE '[0-9]+ warnings?' result.txt | grep -oE '[0-9]+' || echo 0)
      
          echo "### 🧪 CI Test Summary" > report.md
          echo "" >> report.md
          echo "| ✅ Passed | ❌ Failed | ⚠️ Skipped | 🔔 Warnings |" >> report.md
          echo "|-----------|------------|-------------|--------------|" >> report.md
          echo "| $PASSED | $FAILED | $SKIPPED | $WARNINGS |" >> report.md
          echo "" >> report.md
      
          if [ "$FAILED" -gt 0 ]; then
            echo "#### ❌ Failed Tests" >> report.md
            echo "\`\`\`" >> report.md
            grep -A 5 "FAILED" result.txt >> report.md || true
            echo "\`\`\`" >> report.md
          else
            echo "✅ All tests passed successfully!" >> report.md
          fi
      
          echo "" >> report.md
          echo "#### ⏱️ Detailed Pytest Output" >> report.md
          echo "\`\`\`" >> report.md
          tail -n 15 result.txt >> report.md
          echo "\`\`\`" >> report.md
      
          cml comment create report.md

